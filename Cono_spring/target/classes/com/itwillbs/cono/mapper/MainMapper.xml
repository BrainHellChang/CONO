<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.cono.mapper.MainMapper">
<!--   	로그인 -->
	<select id="checkMember" resultType="com.itwillbs.cono.vo.MemberDTO">
		SELECT * FROM member
		WHERE member_id=#{member_id} AND member_pass=#{member_pass}
	</select>
	
<!-- 	회원가입 -->
	<insert id="insertMember">
		INSERT INTO member 
		VALUES (#{member_id},#{member_pass},#{member_email},
			    #{member_phone},#{member_nick},"logo",
			    #{member_birth}, date_format(now(), '%Y%m%d'), "Y")
	</insert>
	
<!-- 	회원가입 축하 쿠폰 -->
	<insert id="insertJoinCoupon">
		INSERT INTO coupon
		VALUES ((SELECT COUNT(c.coupon_idx) FROM coupon c) + 1, #{member_id}, '가입 축하 쿠폰','가입을 축하합니다! 2만원 이상 구매시 이용 가능' ,'5000');
	</insert>
	
<!-- 		회원가입시 샵 기본 정보 생성 -->
	<insert id="insertShopInfo">
		INSERT INTO shop
		VALUES ((SELECT COUNT(s.shop_idx) FROM shop s) + 1,#{member_id},#{member_nick},null,'')
	</insert>
	
<!-- 	상품검색 -->
	<select id="selectCardList" resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_real_name, it.item_title, it.item_region, it.item_price, it.item_date
		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx
		WHERE im.item_idx = it.item_idx AND im.img_idx = '1' AND it.item_title LIKE #{searchType}
		ORDER BY it.item_idx DESC
		LIMIT 0,20
	</select>
	
<!-- 		카테고리 검색 -->
	<select id="selectCategoryCardList" resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_real_name, it.item_title, it.item_region, it.item_price, it.item_date
		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx
					 LEFT OUTER JOIN category cg ON cg.item_idx = it.item_idx
		WHERE im.item_idx = it.item_idx AND im.img_idx = '1' AND cg.category_big = #{cgr}
		ORDER BY it.item_date DESC
		LIMIT 0,20
	</select>
	
<!-- 실시간 인기상품 - 김혜은 -->
	<select id="selectHotItemList" resultType="com.itwillbs.cono.vo.ItemDTO">
		SELECT CAST(@rownum:=@rownum+1  AS UNSIGNED) AS num, item_title, item_readCnt
		FROM item, (SELECT @rownum:=0) TMP
		ORDER BY LENGTH(item_readCnt) DESC, item_readCnt DESC
		LIMIT 0, 10
	</select>
	
</mapper>

