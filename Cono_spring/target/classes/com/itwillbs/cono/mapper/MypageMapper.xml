<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.cono.mapper.MypageMapper">

	<select id="selectRecentViewCount" resultType="java.lang.Integer">
		
	</select>  
	
	<select id="selectBoardList" resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_name, it.item_title, it.item_price, it.item_region , it.item_date 
		FROM item it, recentView re, img im
		WHERE re.member_id = #{sId} AND it.item_idx IN (re.item_idx) AND it.item_idx = im.item_idx AND im.img_idx = '1'
		ORDER BY re.viewTime DESC
	</select>
	
<!-- 	회원 상세 정보 (for 회원 정보 수정) -->
	<select id="selectMemberInfo" resultType="com.itwillbs.cono.vo.MemberDTO">
		SELECT * FROM member 
		WHERE member_id = #{sId}
	</select>
	
<!-- 	회원 정보 수정 -->
	<update id="updateMemberInfo">
		UPDATE member
		SET member_pass = #{member.member_pass}, member_nick = #{member.member_nick}, member_email = #{member.member_email}, member_phone = #{member.member_phone}
		WHERE member_id = #{sId}
	</update>
<!-- 	================================================Center=================================================== -->
<!-- 	코인 내역 리스트 COUNT  -->
	<select id="coinListCount">
		SELECT COUNT(coin_idx)
		FROM coin
		WHERE member_id = #{sId}
	</select>	
	
<!-- 	코인 이용 내역 조회 -->
	<select id="selectCoinInfoList" resultType="com.itwillbs.cono.vo.CoinDTO">
		SELECT coin_idx, coin_add, coin_use, coin_total, coin_date
		FROM coin c
		WHERE member_id = #{sId}
		ORDER BY coin_idx DESC
	</select>
	
<!-- 	현재 보유 코인 -->
	<select id="coinTotal" resultType="string">
		SELECT c.coin_total
		FROM coin c
		WHERE member_id = #{sId}
		ORDER BY coin_idx DESC
		LIMIT 1
	</select>
	
<!-- 	결제 데이터 삽입하기 -->
	<insert id="insertPayment">
		INSERT INTO payment
		VALUES (
				1+(SELECT COUNT(p.payment_idx) FROM payment p WHERE member_id = #{sId}), 
				#{sId}, 
				(SELECT m.member_phone FROM member m WHERE m.member_id = #{sId}),
			    #{payment_value},
			    date_format(now(), '%Y%m%d%H%i%S')
			    )
	</insert>
	
<!-- 	결제 데이터 받아오기 -->
	<select id="selectPayment" resultType="com.itwillbs.cono.vo.PaymentDTO">
		SELECT payment_idx, member_id, member_phone, payment_value, payment_date
		FROM payment
		WHERE member_id = #{sId}
		ORDER BY payment_idx DESC
		LIMIT 1
	</select>
	
<!-- 	코인 충전 -->
	<insert id="insertCoinAdd">
		INSERT INTO coin
		VALUES (1+(	SELECT COUNT(c.coin_idx) FROM coin c WHERE c.member_id = #{sId}),
				#{sId}, 
				#{payment_value}, 
				'0', 
				(#{payment_value} + #{balance}), 
				date_format(now(), '%Y%m%d%H%i%S'))
	</insert>
	
<!-- 	현재 보유중인 쿠폰 수 -->
	<select id="selectCouponCount" resultType="java.lang.Integer">
		SELECT COUNT(coupon_idx)
		  FROM coupon
		 WHERE member_id = #{sId}
	</select>
	
<!-- 	현재 보유 쿠폰 리스트 -->
	<select id="couponList" resultType="com.itwillbs.cono.vo.CouponDTO">
		SELECT coupon_idx, coupon_title, coupon_content, coupon_price
		  FROM coupon
		 WHERE member_id = #{sId} AND coupon_status ='N'
	</select>
	
<!-- 	구매 중 -->
	<select id="selectWaitingList" resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_name, it.item_title, it.item_region, it.item_price, it.item_date
 		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx, ord o
 		WHERE o.member_id = #{sId} AND o.ord_status = 'N' AND it.item_idx = o.item_idx AND im.item_idx = it.item_idx AND im.img_idx = '1'
	</select>
<!-- 	예약 중인 상품 수 -->
<!-- 	<select id="selectReservedCount" resultType="java.lang.Integer"> -->
<!-- 		SELECT COUNT(item_idx)  -->
<!-- 		FROM reserved -->
<!-- 		WHERE member_id = #{sId} -->
<!-- 	</select> -->
	
<!-- 	예약 중인 상품 카드 정보 -->
<!-- 	<select id="selectReservedList" resultType="java.util.HashMap"> -->
<!-- 		SELECT it.item_idx, im.img_name, it.item_title, it.item_region, it.item_price, it.item_date -->
<!-- 		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx, reserved re -->
<!-- 		WHERE re.member_id = #{sId} AND it.item_status = 'R' AND it.item_idx = re.item_idx AND im.item_idx = it.item_idx AND im.img_idx = '1' -->
<!-- 	</select> -->
<!-- 	구매 중 수 -->
	<select id="selectWaitingCount" resultType="java.lang.Integer">
		SELECT COUNT(it.item_idx)
		  FROM item it, ord o
		 WHERE 1=1
		   AND it.item_idx = o.item_idx 
		   AND o.member_id = #{sId}
		   AND o.ord_status = 'N' 
	</select>
<!-- 	찜 상품 수 -->
	<select id="selectWishCount" resultType="java.lang.Integer">
		SELECT COUNT(w.item_idx) FROM wish w WHERE w.member_id = #{sId}
	</select>
<!-- 		찜 상품 내용 -->
	<select id="selectWishList" resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_name, it.item_title, it.item_region, it.item_price, it.item_date
		  FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx, wish w
		 WHERE 1=1 
		   AND w.member_id = #{sId} 
		   AND it.item_idx = w.item_idx 
		   AND im.item_idx = it.item_idx 
		   AND im.img_idx = '1'
	</select>

<!-- 	장바구니 아이템 수 -->
<!-- 	<select id="selectBasketCount" resultType="java.lang.Integer"> -->
<!-- 		SELECT COUNT(item_idx) -->
<!-- 		FROM basket -->
<!-- 		WHERE member_id = #{sId} -->
<!-- 	</select> -->
	
<!-- 	장바구니 아이템 리스트 -->
<!-- 	<select id="selectBasketList" resultType="java.util.HashMap"> -->
<!-- 		SELECT it.item_idx, im.img_name, it.item_title, it.item_price -->
<!-- 		FROM item it, img im -->
<!-- 		WHERE it.item_idx IN (SELECT item_idx  -->
<!-- 							   FROM basket -->
<!-- 							   WHERE member_id = #{sId})  -->
<!-- 		AND im.img_idx = #{sId} -->
<!-- 		AND im.item_idx = it.item_idx -->
<!-- 	</select> -->

<!-- 		구매완료된 상품 리스트 -->
	<select id="selectPurchasedList"  resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_name, s.shop_name ,it.item_title, it.item_content ,it.item_price, o.ord_quantity ,o.ord_date
		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx, ord o, shop s
		WHERE o.ord_status = 'Y' AND o.member_id = #{sId} AND it.item_idx = o.item_idx AND im.item_idx = it.item_idx AND im.img_idx = '1' AND s.shop_idx = it.shop_idx
	</select>

<!-- 		취소상품 리스트 -->
	<select id="selectCancelList"  resultType="java.util.HashMap">
		SELECT it.item_idx, im.img_name, s.shop_name ,it.item_title, it.item_content ,it.item_price, o.ord_quantity ,o.ord_date
		FROM item it LEFT OUTER JOIN img im ON it.item_idx = im.item_idx, ord o, shop s
		WHERE 1=1 AND o.ord_status = 'C' AND o.member_id = #{sId} AND it.item_idx = o.item_idx AND im.item_idx = it.item_idx AND im.img_idx = '1' AND s.shop_idx = it.shop_idx
	</select>
	
<!-- 		내가 쓴 리뷰 리스트 -->	
	<select id="selectReadReviewList" resultType="com.itwillbs.cono.vo.ReviewDTO">
		SELECT review_idx, member_id, item_idx, review_content, review_date, review_score
		FROM review
		WHERE member_id = #{sId}
	</select>
<!-- 	================================================ Center =================================================== -->
<!-- 	================================================ List =================================================== -->

	
</mapper>
